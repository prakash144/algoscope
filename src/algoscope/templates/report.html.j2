{# src/algoscope/templates/report.html.j2 (Premium Google SWE Interview Tool) #}
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8"/>
  <title>{{ title }} - Algoscope Pro</title>
  <meta name="viewport" content="width=device-width,initial-scale=1"/>
  <!-- Favicon -->
  <link rel="icon" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>🔬</text></svg>">
  <!-- Premium Fonts & Icons -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=JetBrains+Mono:wght@400;500;600&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Round" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

  <!-- Plotly CDN (loaded once) -->
  <script src="https://cdn.plot.ly/plotly-2.20.0.min.js"></script>

  <style>
    :root{
      /* Premium Dark Theme - Google-inspired */
      --bg-primary: #0a0e1a;
      --bg-secondary: #111827;
      --bg-tertiary: #1f2937;
      --bg-card: #1e293b;
      --bg-glass: rgba(255,255,255,0.05);
      --bg-glass-hover: rgba(255,255,255,0.08);
      
      /* Google SWE Interview Colors */
      --accent-primary: #4285f4;  /* Google Blue */
      --accent-secondary: #34a853;  /* Google Green */
      --accent-success: #34a853;
      --accent-warning: #fbbc04;  /* Google Yellow */
      --accent-danger: #ea4335;   /* Google Red */
      --accent-purple: #9c27b0;
      --accent-orange: #ff9800;
      
      /* Google Material Design Colors */
      --google-blue-50: #e8f0fe;
      --google-blue-100: #d2e3fc;
      --google-blue-500: #4285f4;
      --google-blue-600: #1a73e8;
      --google-blue-700: #1557b0;
      
      --google-green-50: #e6f4ea;
      --google-green-100: #ceead6;
      --google-green-500: #34a853;
      --google-green-600: #137333;
      
      --google-red-50: #fce8e6;
      --google-red-100: #f9d0cc;
      --google-red-500: #ea4335;
      --google-red-600: #d33b2c;
      
      /* Text Colors */
      --text-primary: #f8fafc;
      --text-secondary: #cbd5e1;
      --text-muted: #94a3b8;
      --text-accent: #60a5fa;
      
      /* Gradients */
      --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      --gradient-success: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
      --gradient-warning: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
      --gradient-glass: linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%);
      
      /* Shadows & Effects */
      --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
      --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
      --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
      --shadow-glow: 0 0 20px rgba(59, 130, 246, 0.3);
      
      /* Layout */
      --radius-sm: 6px;
      --radius-md: 12px;
      --radius-lg: 16px;
      --radius-xl: 24px;
      --max-width: 1400px;
      
      /* Google Material Design Animations */
      --transition-fast: 0.15s cubic-bezier(0.4, 0.0, 0.2, 1);
      --transition-normal: 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
      --transition-slow: 0.5s cubic-bezier(0.4, 0.0, 0.2, 1);
      --transition-bounce: 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
      --transition-elastic: 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      
      /* Google Material Design Elevation */
      --elevation-1: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
      --elevation-2: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
      --elevation-3: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
      --elevation-4: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
      --elevation-5: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
    }
    * {
      box-sizing: border-box;
    }
    
    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
      overflow-x: hidden;
    }
    
    body {
      font-family: "Inter", system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
      background: 
        radial-gradient(circle at 20% 80%, rgba(66, 133, 244, 0.15) 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, rgba(52, 168, 83, 0.1) 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, rgba(251, 188, 4, 0.08) 0%, transparent 50%),
        linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);
      color: var(--text-primary);
      line-height: 1.6;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      position: relative;
      overflow-x: hidden;
    }
    
    /* Animated background particles */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: 
        radial-gradient(2px 2px at 20px 30px, rgba(66, 133, 244, 0.3), transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(52, 168, 83, 0.2), transparent),
        radial-gradient(1px 1px at 90px 40px, rgba(251, 188, 4, 0.3), transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(234, 67, 53, 0.2), transparent),
        radial-gradient(2px 2px at 160px 30px, rgba(156, 39, 176, 0.2), transparent);
      background-repeat: repeat;
      background-size: 200px 200px;
      animation: float 20s ease-in-out infinite;
      pointer-events: none;
      z-index: -1;
    }
    
    @keyframes float {
      0%, 100% { transform: translateY(0px) rotate(0deg); }
      50% { transform: translateY(-20px) rotate(180deg); }
    }
    
    .container {
      width: 100%;
      max-width: var(--max-width);
      margin: 0 auto;
      padding: 24px;
      display: grid;
      grid-template-columns: 320px 1fr;
      gap: 24px;
      min-height: 100vh;
    }

    /* Premium Sidebar with Google Material Design */
    aside.sidebar {
      position: relative;
      padding: 24px;
      border-radius: var(--radius-lg);
      background: var(--gradient-glass);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      box-shadow: var(--elevation-4);
      min-height: 600px;
      overflow: hidden;
      transition: all var(--transition-normal);
      transform: translateZ(0);
    }
    
    aside.sidebar:hover {
      transform: translateY(-2px) translateZ(0);
      box-shadow: var(--elevation-5);
      border-color: rgba(66, 133, 244, 0.3);
    }
    
    aside.sidebar::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 1px;
      background: var(--gradient-primary);
      opacity: 0.6;
    }
    
    .brand-row {
      display: flex;
      align-items: center;
      gap: 16px;
      margin-bottom: 24px;
      padding-bottom: 16px;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .logo {
      width: 48px;
      height: 48px;
      border-radius: var(--radius-md);
      background: linear-gradient(135deg, var(--accent-primary) 0%, var(--accent-secondary) 100%);
      display: grid;
      place-items: center;
      color: white;
      font-weight: 800;
      font-size: 20px;
      box-shadow: var(--elevation-3);
      position: relative;
      overflow: hidden;
      transition: all var(--transition-normal);
      cursor: pointer;
    }
    
    .logo::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(45deg, transparent, rgba(255,255,255,0.2), transparent);
      transform: rotate(45deg);
      transition: var(--transition-slow);
      opacity: 0;
    }
    
    .logo:hover {
      transform: scale(1.05) rotate(5deg);
      box-shadow: var(--elevation-4);
    }
    
    .logo:hover::before {
      animation: shimmer 1.2s ease-in-out;
      opacity: 1;
    }
    
    .logo:active {
      transform: scale(0.95) rotate(-2deg);
      transition: var(--transition-fast);
    }
    
    @keyframes shimmer {
      0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
      100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
    }
    
    /* Pulse animation for logo */
    @keyframes pulse {
      0%, 100% { box-shadow: var(--elevation-3), 0 0 0 0 rgba(66, 133, 244, 0.4); }
      50% { box-shadow: var(--elevation-3), 0 0 0 10px rgba(66, 133, 244, 0); }
    }
    
    .logo.pulse {
      animation: pulse 2s infinite;
    }
    
    h1.app-title {
      margin: 0;
      font-size: 20px;
      font-weight: 800;
      color: var(--text-primary);
      letter-spacing: -0.02em;
    }
    
    p.app-sub {
      margin: 0;
      color: var(--text-muted);
      font-size: 13px;
      font-weight: 500;
    }

    /* Premium Navigation */
    nav.side-nav {
      margin-top: 24px;
      display: flex;
      flex-direction: column;
      gap: 4px;
    }
    
    .side-item {
      padding: 12px 16px;
      border-radius: var(--radius-md);
      color: var(--text-muted);
      font-weight: 600;
      font-size: 14px;
      cursor: pointer;
      display: flex;
      gap: 12px;
      align-items: center;
      transition: all var(--transition-normal);
      position: relative;
      overflow: hidden;
      margin-bottom: 4px;
    }
    
    .side-item::before {
      content: '';
      position: absolute;
      left: 0;
      top: 0;
      bottom: 0;
      width: 3px;
      background: linear-gradient(180deg, var(--accent-primary) 0%, var(--accent-secondary) 100%);
      transform: scaleY(0);
      transition: var(--transition-bounce);
      border-radius: 0 2px 2px 0;
    }
    
    .side-item::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(90deg, transparent, rgba(66, 133, 244, 0.1), transparent);
      transform: translateX(-100%);
      transition: var(--transition-normal);
      opacity: 0;
    }
    
    .side-item:hover {
      background: var(--bg-glass-hover);
      color: var(--text-secondary);
      transform: translateX(6px) scale(1.02);
      box-shadow: var(--elevation-2);
    }
    
    .side-item:hover::after {
      transform: translateX(100%);
      opacity: 1;
    }
    
    .side-item.active {
      background: linear-gradient(135deg, rgba(66, 133, 244, 0.1), rgba(52, 168, 83, 0.05));
      color: var(--text-primary);
      box-shadow: var(--elevation-3);
      border: 1px solid rgba(66, 133, 244, 0.3);
      transform: translateX(4px);
    }
    
    .side-item.active::before {
      transform: scaleY(1);
    }
    
    .side-item.active .material-icons-round {
      color: var(--accent-primary);
      transform: scale(1.1);
    }
    
    .side-item .material-icons-round {
      font-size: 20px;
      opacity: 0.8;
    }
    
    .side-item.active .material-icons-round {
      opacity: 1;
      color: var(--accent-primary);
    }

    /* Premium Topbar */
    header.topbar {
      grid-column: 2;
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: 16px;
      margin-bottom: 24px;
      padding: 20px 24px;
      background: var(--gradient-glass);
      backdrop-filter: blur(20px);
      border-radius: var(--radius-lg);
      border: 1px solid rgba(255, 255, 255, 0.1);
      box-shadow: var(--shadow-lg);
    }
    
    .top-left {
      display: flex;
      gap: 16px;
      align-items: center;
    }
    
    .title-block h2 {
      margin: 0;
      font-size: 24px;
      font-weight: 800;
      color: var(--text-primary);
      letter-spacing: -0.02em;
    }
    
    .title-block p {
      margin: 4px 0 0 0;
      color: var(--text-muted);
      font-size: 14px;
      font-weight: 500;
    }
    
    .actions {
      display: flex;
      gap: 12px;
      align-items: center;
    }
    
    .btn {
      background: transparent;
      color: var(--text-secondary);
      padding: 12px 20px;
      border-radius: var(--radius-md);
      border: 1px solid rgba(255, 255, 255, 0.1);
      cursor: pointer;
      font-weight: 600;
      font-size: 14px;
      transition: all var(--transition-normal);
      display: flex;
      align-items: center;
      gap: 8px;
      position: relative;
      overflow: hidden;
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }
    
    .btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(135deg, rgba(66, 133, 244, 0.1), rgba(52, 168, 83, 0.05));
      opacity: 0;
      transition: var(--transition-normal);
      border-radius: var(--radius-md);
    }
    
    .btn::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 0;
      height: 0;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 50%;
      transform: translate(-50%, -50%);
      transition: var(--transition-normal);
    }
    
    .btn:hover {
      background: var(--bg-glass-hover);
      color: var(--text-primary);
      transform: translateY(-2px) scale(1.05);
      box-shadow: var(--elevation-3);
      border-color: rgba(66, 133, 244, 0.3);
    }
    
    .btn:hover::before {
      opacity: 1;
    }
    
    .btn:hover::after {
      width: 100px;
      height: 100px;
    }
    
    .btn:active {
      transform: translateY(0) scale(1.02);
      transition: var(--transition-fast);
    }
    
    .btn.primary {
      background: linear-gradient(135deg, var(--accent-primary) 0%, var(--accent-secondary) 100%);
      color: white;
      border: none;
      box-shadow: var(--elevation-3);
    }
    
    .btn.primary:hover {
      transform: translateY(-3px) scale(1.05);
      box-shadow: var(--elevation-4), 0 0 20px rgba(66, 133, 244, 0.4);
    }
    
    .btn.primary:active {
      transform: translateY(-1px) scale(1.02);
    }

    /* Premium Content Area */
    main.content {
      grid-column: 2;
    }
    
    .cards {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
      gap: 20px;
      margin-bottom: 24px;
    }
    
    .card {
      padding: 24px;
      border-radius: var(--radius-lg);
      background: var(--gradient-glass);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      box-shadow: var(--elevation-2);
      transition: all var(--transition-normal);
      position: relative;
      overflow: hidden;
      cursor: pointer;
    }
    
    .card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: linear-gradient(90deg, var(--accent-primary) 0%, var(--accent-secondary) 100%);
      opacity: 0;
      transition: var(--transition-normal);
      border-radius: var(--radius-lg) var(--radius-lg) 0 0;
    }
    
    .card::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(135deg, rgba(66, 133, 244, 0.05), rgba(52, 168, 83, 0.02));
      opacity: 0;
      transition: var(--transition-normal);
      border-radius: var(--radius-lg);
    }
    
    .card:hover {
      transform: translateY(-6px) scale(1.02);
      box-shadow: var(--elevation-4);
      border-color: rgba(66, 133, 244, 0.4);
    }
    
    .card:hover::before {
      opacity: 1;
    }
    
    .card:hover::after {
      opacity: 1;
    }
    
    .card:active {
      transform: translateY(-2px) scale(1.01);
      transition: var(--transition-fast);
    }
    
    .card h4 {
      margin: 0 0 12px 0;
      font-size: 14px;
      color: var(--text-muted);
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.05em;
    }
    
    .metric {
      font-size: 28px;
      font-weight: 800;
      color: var(--text-primary);
      margin-top: 8px;
      font-family: "JetBrains Mono", monospace;
    }

    .grid-2 {
      display: grid;
      grid-template-columns: 1fr 400px;
      gap: 24px;
    }

    /* Full width for chart panels when right sidebar is not visible */
    .chart-full-width {
      grid-template-columns: 1fr;
    }
    
    .chart-full-width .chart-container {
      width: 100%;
      max-width: none;
    }
    
    @media (max-width: 1200px) {
      .container {
        grid-template-columns: 1fr;
      }
      .grid-2 {
        grid-template-columns: 1fr;
      }
      .cards {
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      }
    }

    /* Premium Panels & Charts */
    .panel {
      margin-bottom: 24px;
      border-radius: var(--radius-lg);
      overflow: hidden;
      background: var(--gradient-glass);
      backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 255, 255, 0.1);
      box-shadow: var(--shadow-lg);
      transition: all var(--transition-normal);
    }
    
    .panel:hover {
      box-shadow: var(--shadow-xl);
      border-color: rgba(59, 130, 246, 0.2);
    }
    
    .panel .panel-head {
      padding: 20px 24px;
      background: var(--gradient-glass);
      display: flex;
      justify-content: space-between;
      align-items: center;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .panel .panel-head strong {
      font-size: 18px;
      font-weight: 700;
      color: var(--text-primary);
    }
    
    .panel .panel-body {
      padding: 24px;
      background: transparent;
      overflow: hidden; /* Remove horizontal scrolling */
    }
    
    .panel .panel-body > div {
      min-width: 800px; /* Ensure charts have minimum width */
    }

    /* Chart responsiveness and overflow fixes */
    .panel .panel-body .js-plotly-plot {
      width: 100% !important;
      max-width: 100% !important;
      overflow: hidden !important;
    }

    .panel .panel-body .plotly {
      width: 100% !important;
      max-width: 100% !important;
    }

    /* Ensure chart containers are responsive */
    .chart-container {
      width: 100%;
      max-width: 100%;
      overflow: hidden;
    }

    /* Chart legend and info improvements */
    .js-plotly-plot .legend {
      font-family: 'Inter', sans-serif !important;
      font-size: 13px !important;
      background: rgba(255, 255, 255, 0.05) !important;
      border: 1px solid rgba(255, 255, 255, 0.1) !important;
      border-radius: 8px !important;
      padding: 8px !important;
      backdrop-filter: blur(10px) !important;
    }

    .js-plotly-plot .legend .legendtext {
      color: var(--text-primary) !important;
      font-weight: 500 !important;
    }

    .js-plotly-plot .legend .traces {
      margin: 4px 0 !important;
    }

    /* Improve chart hover and selection */
    .js-plotly-plot .hovertext {
      background: rgba(0, 0, 0, 0.8) !important;
      color: white !important;
      border: 1px solid rgba(255, 255, 255, 0.2) !important;
      border-radius: 6px !important;
      padding: 8px 12px !important;
      font-size: 12px !important;
      font-family: 'Inter', sans-serif !important;
    }

    /* Chart axis improvements */
    .js-plotly-plot .xaxis, .js-plotly-plot .yaxis {
      font-family: 'Inter', sans-serif !important;
      color: var(--text-muted) !important;
    }

    .js-plotly-plot .xaxis-title, .js-plotly-plot .yaxis-title {
      font-family: 'Inter', sans-serif !important;
      font-weight: 600 !important;
      color: var(--text-primary) !important;
    }

    /* Premium Badges */
    .badge {
      display: inline-block;
      padding: 8px 16px;
      border-radius: var(--radius-xl);
      background: var(--gradient-glass);
      color: var(--text-primary);
      font-weight: 600;
      font-size: 12px;
      margin-right: 8px;
      margin-bottom: 8px;
      border: 1px solid rgba(255, 255, 255, 0.1);
      transition: all var(--transition-normal);
      text-transform: uppercase;
      letter-spacing: 0.05em;
    }

    /* Tab Navigation Styles */
    .tab-container {
      width: 100%;
    }

    .tab-nav {
      display: flex;
      border-bottom: 2px solid rgba(66, 133, 244, 0.1);
      margin-bottom: 20px;
      background: rgba(66, 133, 244, 0.02);
      border-radius: 8px 8px 0 0;
      padding: 4px;
    }

    .tab-btn {
      flex: 1;
      padding: 12px 16px;
      background: transparent;
      border: none;
      color: var(--text-muted);
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
      border-radius: 6px;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .tab-btn:hover {
      background: rgba(66, 133, 244, 0.08);
      color: var(--text-primary);
      transform: translateY(-1px);
    }

    .tab-btn.active {
      background: var(--gradient-primary);
      color: white;
      box-shadow: 0 4px 12px rgba(66, 133, 244, 0.3);
      transform: translateY(-2px);
    }

    .tab-btn.active::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(135deg, rgba(255,255,255,0.2) 0%, transparent 100%);
      border-radius: 6px;
    }

    .tab-content {
      display: none;
      animation: fadeIn 0.3s ease-in-out;
    }

    .tab-content.active {
      display: block;
    }

    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(10px); }
      to { opacity: 1; transform: translateY(0); }
    }

    /* Enhanced Card Styles */
    .card {
      background: var(--bg-card);
      border: 1px solid rgba(66, 133, 244, 0.1);
      border-radius: 12px;
      padding: 20px;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 3px;
      background: var(--gradient-primary);
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .card:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
      border-color: rgba(66, 133, 244, 0.2);
    }

    .card:hover::before {
      opacity: 1;
    }

    /* Enhanced Panel Styles */
    .panel {
      background: var(--bg-card);
      border: 1px solid rgba(66, 133, 244, 0.1);
      border-radius: 16px;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
      overflow: hidden;
      transition: all 0.3s ease;
    }

    .panel:hover {
      box-shadow: 0 12px 40px rgba(0, 0, 0, 0.12);
      border-color: rgba(66, 133, 244, 0.2);
    }

    .panel-head {
      background: linear-gradient(135deg, rgba(66, 133, 244, 0.05) 0%, rgba(139, 92, 246, 0.05) 100%);
      padding: 20px 24px;
      border-bottom: 1px solid rgba(66, 133, 244, 0.1);
      display: flex;
      align-items: center;
      justify-content: space-between;
      flex-wrap: wrap;
      gap: 12px;
    }

    .panel-body {
      padding: 24px;
    }

    /* Enhanced Table Styles */
    table {
      border-radius: 8px;
      overflow: hidden;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    table tbody tr:hover {
      background: rgba(66, 133, 244, 0.05);
      transform: scale(1.01);
      transition: all 0.2s ease;
    }
    
    .badge:hover {
      background: var(--bg-glass-hover);
      transform: translateY(-1px);
      box-shadow: var(--shadow-md);
    }

    /* Premium Error Log */
    .errors {
      max-height: 160px;
      overflow: auto;
      padding: 16px;
      background: linear-gradient(135deg, rgba(239, 68, 68, 0.1), rgba(239, 68, 68, 0.05));
      border-radius: var(--radius-md);
      border: 1px solid rgba(239, 68, 68, 0.2);
      color: var(--accent-danger);
      font-size: 13px;
      font-family: "JetBrains Mono", monospace;
    }

    /* Premium Typography */
    .muted {
      color: var(--text-muted);
      font-size: 14px;
      font-weight: 500;
    }
    
    .mono {
      font-family: "JetBrains Mono", monospace;
      font-size: 13px;
      color: var(--text-primary);
      background: var(--bg-tertiary);
      padding: 2px 6px;
      border-radius: var(--radius-sm);
    }

    /* Premium Footer */
    footer.footer {
      margin-top: 32px;
      padding: 20px;
      color: var(--text-muted);
      font-size: 13px;
      text-align: center;
      background: var(--gradient-glass);
      border-radius: var(--radius-lg);
      border: 1px solid rgba(255, 255, 255, 0.1);
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Sidebar -->
    <aside class="sidebar">
      <div class="brand-row">
        <div class="logo">
          <i class="fas fa-microscope"></i>
        </div>
        <div>
          <h1 class="app-title">Algoscope Pro</h1>
          <p class="app-sub">Google SWE Interview Prep Tool</p>
        </div>
      </div>

      <!-- Short stats -->
      <div style="margin-top:8px;">
        <div class="card" style="padding:12px;">
          <h4>Quick Stats</h4>
          <div style="margin-top:8px;">
            <div class="muted">Input sizes</div>
            <div class="metric">{{ ns|length }} sizes</div>
            <div class="muted" style="margin-top:6px;">Measured points</div>
            <div class="metric">{{ runtime_table|length }} points</div>
          </div>
        </div>
      </div>

      <!-- Navigation -->
      <nav class="side-nav" role="navigation" aria-label="Main">
        <div class="side-item active" data-tab="overview"><span class="material-icons-round">dashboard</span> Overview</div>
        <div class="side-item" data-tab="runtime"><span class="material-icons-round">speed</span> Runtime Analysis</div>
        <div class="side-item" data-tab="memory"><span class="material-icons-round">memory</span> Memory Analysis</div>
        <div class="side-item" data-tab="complexity"><span class="material-icons-round">analytics</span> Complexity Analysis</div>
        <div class="side-item" data-tab="comparison"><span class="material-icons-round">compare_arrows</span> Algorithm Comparison</div>
        <div class="side-item" data-tab="interview"><span class="material-icons-round">school</span> Interview Prep</div>
      </nav>

      <!-- Errors / warnings -->
      <div style="margin-top:12px;">
        <div class="card">
          <h4 style="margin-bottom:8px;">Diagnostics</h4>
          {% set any_errors = false %}
          {% for lbl, stat in func_stats.items() %}
            {% if stat.errors %}
              {% set any_errors = true %}
            {% endif %}
          {% endfor %}
          {% if any_errors %}
            <div class="errors">
              {% for lbl, stat in func_stats.items() %}
                {% for e in stat.errors %}
                  <div><strong>{{ lbl }}:</strong> {{ e }}</div>
                {% endfor %}
              {% endfor %}
            </div>
          {% else %}
            <div class="muted">No diagnostics or warnings detected.</div>
          {% endif %}
        </div>
      </div>

      <div style="position:absolute;bottom:18px; left:18px; right:18px;">
        <div class="muted" style="font-size:12px;">Report generated by <strong>algoscope</strong></div>
      </div>
    </aside>

    <!-- Main content -->
    <main class="content">
      <header class="topbar">
        <div class="top-left">
          <div class="title-block">
            <h2>{{ title }}</h2>
            <p class="muted">{{ notes or "" }}</p>
          </div>
        </div>
        <div class="actions">
          {% if html_path %}
            <a class="btn" href="file://{{ html_path }}" title="Open file"><span class="material-icons-round">launch</span></a>
          {% endif %}
          <button class="btn" id="toggleTheme" title="Toggle theme"><span class="material-icons-round">dark_mode</span></button>
          <button class="btn primary" id="downloadBtn"><span class="material-icons-round">download</span> Download</button>
        </div>
      </header>

      <!-- metric cards -->
      <div class="cards">
        <div class="card">
          <h4>Best runtime</h4>
          <div class="metric">
            {% if comparison_rows|length > 0 %}
              {{ comparison_rows[0].best_runtime }}
            {% else %} — {% endif %}
          </div>
          <div class="muted" style="margin-top:8px;">Based on mean runtime across sizes</div>
        </div>

        <div class="card">
          <h4>Mean runtime (median of means)</h4>
          <div class="metric">
            {% set m = (runtime_table|map(attribute= (runtime_table[0]|list)[0] ) ) %}
            {% set any_label = runtime_table[0].keys()|list|reject('equalto','n')|first %}
            {% if any_label %}
              {% set mean_vals = runtime_table|map(attribute=any_label)|map(attribute='mean')|list %}
            {% else %}
              {% set mean_vals = [] %}
            {% endif %}
            {% if mean_vals|length %}
              {{ mean_vals|map('float')|sum/mean_vals|length |round(6) }}
            {% else %}
              —
            {% endif %}
          </div>
          <div class="muted" style="margin-top:8px;">Median across functions' means</div>
        </div>

        <div class="card">
          <h4>Input sizes</h4>
          <div class="metric">{{ ns | join(', ') }}</div>
          <div class="muted" style="margin-top:8px;">Range: {{ ns | min }} → {{ ns | max }}</div>
        </div>
      </div>

      <div class="grid-2" style="gap: 24px;">
        <!-- Left: big charts -->
        <div style="min-width: 0; flex: 1;">
          <div class="panel" id="overview_panel">
            <div class="panel-head">
              <div><strong>🚀 Algorithm Performance Overview</strong> <span class="muted" style="margin-left:8px;">Google SWE Interview Analysis</span></div>
              <div>
                <button class="btn" id="toggleScale"><span class="material-icons-round">trending_up</span> Y-scale: log</button>
                <button class="btn" id="resetView"><span class="material-icons-round">refresh</span> Reset</button>
              </div>
            </div>
            <div class="panel-body" id="overview_chart">
              {{ overview_div | safe }}
              
              <!-- Performance Analysis Card -->
              <div class="card" style="margin-top:20px; background:linear-gradient(135deg, rgba(66, 133, 244, 0.05) 0%, rgba(139, 92, 246, 0.05) 100%); border-left:4px solid var(--accent-primary);">
                <h4 style="color:var(--accent-primary); margin-bottom:12px;">📊 Performance Analysis</h4>
                <div style="display:grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap:16px;">
                  <div style="padding:12px; background:rgba(255,255,255,0.1); border-radius:8px;">
                    <strong style="color:var(--accent-success);">🏆 Best Performer:</strong>
                    <div class="muted" style="margin-top:4px; font-size:13px;">
                      {% if comparison_rows|length > 0 %}
                        {{ comparison_rows[0].best_runtime }} - Fastest algorithm across all input sizes
                      {% else %}
                        Analysis in progress...
                      {% endif %}
                    </div>
                  </div>
                  <div style="padding:12px; background:rgba(255,255,255,0.1); border-radius:8px;">
                    <strong style="color:var(--accent-warning);">📈 Growth Pattern:</strong>
                    <div class="muted" style="margin-top:4px; font-size:13px;">
                      Compare the slope of curves to identify time complexity patterns (O(1), O(log n), O(n), O(n log n), O(n²))
                    </div>
                  </div>
                  <div style="padding:12px; background:rgba(255,255,255,0.1); border-radius:8px;">
                    <strong style="color:var(--accent-danger);">⚠️ Performance Gap:</strong>
                    <div class="muted" style="margin-top:4px; font-size:13px;">
                      The vertical distance between curves shows the performance difference - larger gaps indicate more significant algorithmic improvements
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div class="panel" id="runtime_panel">
            <div class="panel-head">
              <div><strong>⚡ Runtime Analysis</strong> <span class="muted" style="margin-left:8px;">Time complexity performance</span></div>
              <div>
                <button class="btn" id="runtimeToggleScale"><span class="material-icons-round">trending_up</span> Y-scale: log</button>
              </div>
            </div>
            <div class="panel-body" id="runtime_chart">
              {{ runtime_div | safe }}
              
              <!-- Runtime Analysis Insights -->
              <div class="card" style="margin-top:20px; background:linear-gradient(135deg, rgba(52, 168, 83, 0.05) 0%, rgba(16, 185, 129, 0.05) 100%); border-left:4px solid var(--accent-success);">
                <h4 style="color:var(--accent-success); margin-bottom:12px;">⚡ Runtime Insights</h4>
                <div style="display:grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap:16px;">
                  <div style="padding:12px; background:rgba(255,255,255,0.1); border-radius:8px;">
                    <strong style="color:var(--accent-primary);">🔍 Complexity Detection:</strong>
                    <div class="muted" style="margin-top:4px; font-size:13px;">
                      • <strong>Flat line:</strong> O(1) - Constant time<br>
                      • <strong>Gradual increase:</strong> O(log n) - Logarithmic<br>
                      • <strong>Linear growth:</strong> O(n) - Linear time<br>
                      • <strong>Steep curve:</strong> O(n²) or higher
                    </div>
                  </div>
                  <div style="padding:12px; background:rgba(255,255,255,0.1); border-radius:8px;">
                    <strong style="color:var(--accent-warning);">📊 Performance Metrics:</strong>
                    <div class="muted" style="margin-top:4px; font-size:13px;">
                      • <strong>Y-axis (log scale):</strong> Shows exponential differences clearly<br>
                      • <strong>X-axis:</strong> Input size progression<br>
                      • <strong>Curve separation:</strong> Indicates algorithmic efficiency gap
                    </div>
                  </div>
                  <div style="padding:12px; background:rgba(255,255,255,0.1); border-radius:8px;">
                    <strong style="color:var(--accent-danger);">🎯 Interview Tips:</strong>
                    <div class="muted" style="margin-top:4px; font-size:13px;">
                      • Explain the time complexity you observe<br>
                      • Compare algorithms at different input sizes<br>
                      • Discuss when each algorithm becomes optimal<br>
                      • Mention space-time trade-offs
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div class="panel" id="memory_panel">
            <div class="panel-head">
              <div><strong>🧠 Memory Analysis</strong> <span class="muted" style="margin-left:8px;">Space complexity performance</span></div>
              <div>
                <button class="btn" id="memoryToggleScale"><span class="material-icons-round">trending_up</span> Y-scale: linear</button>
              </div>
            </div>
            <div class="panel-body" id="memory_chart">
              {{ memory_div | safe }}
              
              <!-- Memory Analysis Insights -->
              <div class="card" style="margin-top:20px; background:linear-gradient(135deg, rgba(156, 39, 176, 0.05) 0%, rgba(139, 92, 246, 0.05) 100%); border-left:4px solid var(--accent-purple);">
                <h4 style="color:var(--accent-purple); margin-bottom:12px;">🧠 Memory Insights</h4>
                <div style="display:grid; grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); gap:16px;">
                  <div style="padding:12px; background:rgba(255,255,255,0.1); border-radius:8px;">
                    <strong style="color:var(--accent-primary);">💾 Space Complexity Patterns:</strong>
                    <div class="muted" style="margin-top:4px; font-size:13px;">
                      • <strong>Constant:</strong> O(1) - Fixed memory usage<br>
                      • <strong>Linear:</strong> O(n) - Memory grows with input<br>
                      • <strong>Quadratic:</strong> O(n²) - Memory grows exponentially<br>
                      • <strong>Logarithmic:</strong> O(log n) - Minimal growth
                    </div>
                  </div>
                  <div style="padding:12px; background:rgba(255,255,255,0.1); border-radius:8px;">
                    <strong style="color:var(--accent-success);">📈 Memory Efficiency:</strong>
                    <div class="muted" style="margin-top:4px; font-size:13px;">
                      • <strong>Lower curves:</strong> More memory efficient<br>
                      • <strong>Steep slopes:</strong> Memory usage grows quickly<br>
                      • <strong>Flat lines:</strong> Constant space complexity<br>
                      • <strong>Gap analysis:</strong> Compare memory trade-offs
                    </div>
                  </div>
                  <div style="padding:12px; background:rgba(255,255,255,0.1); border-radius:8px;">
                    <strong style="color:var(--accent-warning);">🎯 Optimization Tips:</strong>
                    <div class="muted" style="margin-top:4px; font-size:13px;">
                      • Consider in-place algorithms for O(1) space<br>
                      • Use iterative vs recursive approaches<br>
                      • Evaluate auxiliary data structures<br>
                      • Discuss memory vs time trade-offs
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Right: summaries & details -->
        <div>

          <!-- Algorithm-specific Interview Tips -->
          {% if interview_tips %}
          <div class="card" style="margin-bottom:12px;">
            <h4>🎯 Algorithm-Specific Interview Tips</h4>
            {% for label, tips in interview_tips.items() %}
              <div style="margin-top:12px; padding:12px; background:rgba(66, 133, 244, 0.05); border-radius:8px; border-left:3px solid var(--accent-primary);">
                <div style="display:flex; align-items:center; gap:8px; margin-bottom:8px;">
                  <span class="badge" style="background:var(--gradient-primary); color:white;">{{ label }}</span>
                  <span style="font-size:12px; color:var(--text-muted);">Interview Tips</span>
                </div>
                <ul style="margin:0; padding-left:16px; font-size:13px; line-height:1.5;">
                  {% for tip in tips %}
                    <li style="margin-bottom:4px;">{{ tip }}</li>
                  {% endfor %}
                </ul>
              </div>
            {% endfor %}
          </div>
          {% endif %}

          <!-- Optimization Suggestions -->
          {% if optimization_suggestions %}
          <div class="card" style="margin-bottom:12px;">
            <h4>🚀 Optimization Suggestions</h4>
            {% for label, suggestions in optimization_suggestions.items() %}
              <div style="margin-top:12px; padding:12px; background:rgba(52, 168, 83, 0.05); border-radius:8px; border-left:3px solid var(--accent-success);">
                <div style="display:flex; align-items:center; gap:8px; margin-bottom:8px;">
                  <span class="badge" style="background:var(--gradient-success); color:white;">{{ label }}</span>
                  <span style="font-size:12px; color:var(--text-muted);">Optimization Ideas</span>
                </div>
                <ul style="margin:0; padding-left:16px; font-size:13px; line-height:1.5;">
                  {% for suggestion in suggestions %}
                    <li style="margin-bottom:4px;">{{ suggestion }}</li>
                  {% endfor %}
                </ul>
              </div>
            {% endfor %}
          </div>
          {% endif %}

          <!-- Detected Algorithm Patterns -->
          {% if patterns_detected %}
          <div class="card" style="margin-bottom:12px;">
            <h4>🔍 Detected Algorithm Patterns</h4>
            {% for label, patterns in patterns_detected.items() %}
              <div style="margin-top:12px; padding:12px; background:rgba(156, 39, 176, 0.05); border-radius:8px; border-left:3px solid var(--accent-purple);">
                <div style="display:flex; align-items:center; gap:8px; margin-bottom:8px;">
                  <span class="badge" style="background:var(--gradient-purple); color:white;">{{ label }}</span>
                  <span style="font-size:12px; color:var(--text-muted);">Patterns Detected</span>
                </div>
                <div style="display:flex; flex-wrap:wrap; gap:6px;">
                  {% for pattern in patterns %}
                    <span class="badge" style="background:rgba(156, 39, 176, 0.2); color:var(--accent-purple); border:1px solid rgba(156, 39, 176, 0.3);">{{ pattern }}</span>
                  {% endfor %}
                </div>
              </div>
            {% endfor %}
          </div>
          {% endif %}


        </div>
      </div>

      <!-- Complexity Analysis Section -->
      <div class="panel" id="complexity_panel" style="margin-top:12px; display:none;">
        <div class="panel-head">
          <strong>📊 Complexity Analysis</strong>
          <span class="muted" style="margin-left:8px;">Advanced algorithm complexity insights</span>
        </div>
        <div class="panel-body">
          <!-- Complexity Tabs -->
          <div class="tab-container" style="margin-bottom:20px;">
            <div class="tab-nav">
              <button class="tab-btn active" data-tab="advanced-complexity">Advanced Analysis</button>
              <button class="tab-btn" data-tab="beginner-summaries">Beginner Summaries</button>
              <button class="tab-btn" data-tab="interview-summary">Interview Summary</button>
            </div>
            
            <!-- Advanced Complexity Analysis Tab -->
            <div class="tab-content active" id="advanced-complexity">
              <div class="card" style="margin-bottom:12px;">
                <h4>🔍 Advanced Complexity Analysis</h4>
                {% for label, md in manual_complexities_concise.items() %}
                  <div style="margin-top:12px; padding:12px; background:rgba(66, 133, 244, 0.05); border-radius:8px; border-left:3px solid var(--accent-primary);">
                    <div style="display:flex; align-items:center; gap:8px; margin-bottom:8px;">
                      <span class="badge" style="background:var(--gradient-primary); color:white;">{{ label }}</span>
                      <span style="font-size:12px; color:var(--text-muted);">Algorithm Analysis</span>
                    </div>
                    <div style="margin-bottom:8px;">{{ md|safe }}</div>
                    {% if dynamic_guesses and dynamic_guesses[label] %}
                      <div style="padding:8px; background:rgba(52, 168, 83, 0.1); border-radius:6px; font-size:12px; color:var(--accent-success); margin-top:6px;">
                        <strong>📊 Empirical Analysis:</strong> {{ dynamic_guesses[label] }}
                      </div>
                    {% endif %}
                  </div>
                {% endfor %}
              </div>
            </div>
            
            <!-- Beginner Summaries Tab -->
            <div class="tab-content" id="beginner-summaries">
              <div class="card" style="margin-bottom:12px;">
                <h4>📚 Beginner Summaries</h4>
                {% for label, text in beginner_summaries.items() %}
                  <div style="margin-top:10px;"><span class="badge">{{ label }}</span> <div class="muted" style="margin-top:6px;">{{ text }}</div></div>
                {% endfor %}
              </div>
            </div>
            
            <!-- Interview Summary Tab -->
            <div class="tab-content" id="interview-summary">
              <div class="card" style="margin-bottom:12px;">
                <h4>🎯 Interview Summary</h4>
                {% for label, text in interview_summaries.items() %}
                  <div style="margin-top:10px;"><strong>{{ label }}</strong><div class="muted" style="margin-top:6px;">{{ text }}</div></div>
                {% endfor %}
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Google SWE Interview Preparation Section -->
      <div class="panel" id="interview_panel" style="margin-top:12px; display:none;">
        <div class="panel-head">
          <strong>🎓 Google SWE Interview Preparation</strong>
          <span class="muted" style="margin-left:8px;">Master your algorithm analysis skills</span>
        </div>
        <div class="panel-body">
          <!-- Interview Prep Tabs -->
          <div class="tab-container" style="margin-bottom:20px;">
            <div class="tab-nav">
              <button class="tab-btn active" data-tab="interview-guide">Interview Guide</button>
              <button class="tab-btn" data-tab="general-tips">General Tips</button>
              <button class="tab-btn" data-tab="methods-notes">Methods & Notes</button>
            </div>
            
            <!-- Interview Guide Tab -->
            <div class="tab-content active" id="interview-guide">
          <div style="display:grid; grid-template-columns: 1fr 1fr; gap:20px; margin-bottom:20px;">
            <!-- Key Concepts -->
            <div class="card" style="padding:16px;">
              <h4 style="color:var(--accent-primary); margin-bottom:12px;">🔑 Key Concepts</h4>
              <ul style="margin:0; padding-left:16px; font-size:14px; line-height:1.6;">
                <li><strong>Time Complexity:</strong> How runtime scales with input size</li>
                <li><strong>Space Complexity:</strong> How memory usage scales with input size</li>
                <li><strong>Big O Notation:</strong> Worst-case scenario analysis</li>
                <li><strong>Algorithm Patterns:</strong> Common approaches to problems</li>
                <li><strong>Trade-offs:</strong> Time vs space optimization</li>
              </ul>
            </div>
            
            <!-- Common Patterns -->
            <div class="card" style="padding:16px;">
              <h4 style="color:var(--accent-success); margin-bottom:12px;">🎯 Common Patterns</h4>
              <div style="display:flex; flex-wrap:wrap; gap:8px;">
                <span class="badge" style="background:var(--accent-primary); color:white;">Two Pointers</span>
                <span class="badge" style="background:var(--accent-success); color:white;">Binary Search</span>
                <span class="badge" style="background:var(--accent-warning); color:white;">Sliding Window</span>
                <span class="badge" style="background:var(--accent-danger); color:white;">Hash Map</span>
                <span class="badge" style="background:var(--accent-purple); color:white;">Dynamic Programming</span>
                <span class="badge" style="background:var(--accent-orange); color:white;">Tree Traversal</span>
              </div>
            </div>
          </div>
          
          <!-- Interview Tips -->
          <div class="card" style="padding:16px; margin-bottom:16px;">
            <h4 style="color:var(--accent-warning); margin-bottom:12px;">💡 Interview Success Tips</h4>
            <div style="display:grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap:16px;">
              <div>
                <h5 style="margin:8px 0; color:var(--text-primary);">Before Coding</h5>
                <ul style="margin:0; padding-left:16px; font-size:13px;">
                  <li>Clarify requirements and constraints</li>
                  <li>Identify the problem type and pattern</li>
                  <li>Think about edge cases</li>
                  <li>Estimate time/space complexity upfront</li>
                </ul>
              </div>
              <div>
                <h5 style="margin:8px 0; color:var(--text-primary);">While Coding</h5>
                <ul style="margin:0; padding-left:16px; font-size:13px;">
                  <li>Start with brute force solution</li>
                  <li>Explain your thought process</li>
                  <li>Optimize step by step</li>
                  <li>Test with examples</li>
                </ul>
              </div>
              <div>
                <h5 style="margin:8px 0; color:var(--text-primary);">After Coding</h5>
                <ul style="margin:0; padding-left:16px; font-size:13px;">
                  <li>Analyze time and space complexity</li>
                  <li>Discuss potential optimizations</li>
                  <li>Consider alternative approaches</li>
                  <li>Handle edge cases</li>
                </ul>
              </div>
            </div>
          </div>
          
          <!-- Complexity Cheat Sheet -->
          <div class="card" style="padding:16px;">
            <h4 style="color:var(--accent-secondary); margin-bottom:12px;">📊 Complexity Cheat Sheet</h4>
            <div style="display:grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap:12px;">
              <div style="padding:8px; background:rgba(16, 185, 129, 0.1); border-radius:6px; border-left:3px solid var(--accent-success);">
                <strong style="color:var(--accent-success);">O(1)</strong><br>
                <span style="font-size:12px; color:var(--text-muted);">Constant time - Hash lookup, array access</span>
              </div>
              <div style="padding:8px; background:rgba(59, 130, 246, 0.1); border-radius:6px; border-left:3px solid var(--accent-primary);">
                <strong style="color:var(--accent-primary);">O(log n)</strong><br>
                <span style="font-size:12px; color:var(--text-muted);">Logarithmic - Binary search, balanced trees</span>
              </div>
              <div style="padding:8px; background:rgba(251, 188, 4, 0.1); border-radius:6px; border-left:3px solid var(--accent-warning);">
                <strong style="color:var(--accent-warning);">O(n)</strong><br>
                <span style="font-size:12px; color:var(--text-muted);">Linear - Single pass, two pointers</span>
              </div>
              <div style="padding:8px; background:rgba(156, 39, 176, 0.1); border-radius:6px; border-left:3px solid var(--accent-purple);">
                <strong style="color:var(--accent-purple);">O(n log n)</strong><br>
                <span style="font-size:12px; color:var(--text-muted);">Linearithmic - Sorting, heap operations</span>
              </div>
              <div style="padding:8px; background:rgba(239, 68, 53, 0.1); border-radius:6px; border-left:3px solid var(--accent-danger);">
                <strong style="color:var(--accent-danger);">O(n²)</strong><br>
                <span style="font-size:12px; color:var(--text-muted);">Quadratic - Nested loops, bubble sort</span>
              </div>
              <div style="padding:8px; background:rgba(255, 152, 0, 0.1); border-radius:6px; border-left:3px solid var(--accent-orange);">
                <strong style="color:var(--accent-orange);">O(2ⁿ)</strong><br>
                <span style="font-size:12px; color:var(--text-muted);">Exponential - Brute force, recursion</span>
              </div>
            </div>
          </div>
            </div>
            
            <!-- General Tips Tab -->
            <div class="tab-content" id="general-tips">
              <div class="card" style="margin-bottom:12px;">
                <h4>🎯 General Google SWE Interview Tips</h4>
                <div style="margin-top:8px;">
                  <div style="padding:8px; background:rgba(251, 188, 4, 0.1); border-radius:6px; margin-bottom:8px;">
                    <strong>💡 Key Points to Mention:</strong>
                    <ul style="margin:4px 0; padding-left:16px; font-size:13px;">
                      <li>Always start with brute force, then optimize</li>
                      <li>Explain time/space complexity trade-offs</li>
                      <li>Consider edge cases and constraints</li>
                      <li>Use the right data structure for the problem</li>
                    </ul>
                  </div>
                  <div style="padding:8px; background:rgba(52, 168, 83, 0.1); border-radius:6px; margin-bottom:8px;">
                    <strong>🚀 Optimization Strategies:</strong>
                    <ul style="margin:4px 0; padding-left:16px; font-size:13px;">
                      <li>Two pointers for sorted arrays</li>
                      <li>Hash maps for O(1) lookups</li>
                      <li>Sliding window for subarray problems</li>
                      <li>Binary search for sorted data</li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Methods & Notes Tab -->
            <div class="tab-content" id="methods-notes">
              <div class="card" style="margin-bottom:12px;">
                <h4>Methods & notes</h4>
                <div class="muted" style="margin-top:8px; white-space:pre-wrap;">{{ methods_text|safe }}</div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Algorithm Comparison Section -->
      <div class="panel" id="comparison_panel" style="margin-top:12px; display:none;">
        <div class="panel-head">
          <strong>⚖️ Algorithm Comparison</strong>
          <span class="muted" style="margin-left:8px;">Compare algorithm performance metrics</span>
        </div>
        <div class="panel-body">
          <!-- Comparison Tabs -->
          <div class="tab-container" style="margin-bottom:20px;">
            <div class="tab-nav">
              <button class="tab-btn active" data-tab="comparison-summary">Algorithm Comparison Summary</button>
            </div>
            
            <!-- Algorithm Comparison Summary Tab -->
            <div class="tab-content active" id="comparison-summary">
              <div class="card" style="margin-bottom:12px;">
                <h4>📊 Algorithm Comparison Summary</h4>
                <div style="overflow-x:auto; margin-top:12px;">
                  <table style="width:100%; border-collapse:collapse; min-width:600px;">
                    <thead>
                      <tr style="color:var(--muted); font-size:13px; background:rgba(66, 133, 244, 0.05);">
                        <th style="text-align:left; padding:12px; border-bottom:2px solid var(--accent-primary);">Input Size (n)</th>
                        <th style="text-align:left;padding:12px; border-bottom:2px solid var(--accent-primary);">Best Runtime</th>
                        <th style="text-align:left;padding:12px; border-bottom:2px solid var(--accent-primary);">Worst Runtime</th>
                        <th style="text-align:left;padding:12px; border-bottom:2px solid var(--accent-primary);">Mean Ranks</th>
                      </tr>
                    </thead>
                    <tbody>
                    {% for row in comparison_rows %}
                      <tr style="border-bottom:1px solid rgba(66, 133, 244, 0.1); transition:background-color 0.2s;">
                        <td class="mono" style="padding:12px; font-weight:600; color:var(--accent-primary);">{{ row.n }}</td>
                        <td style="padding:12px; color:var(--accent-success); font-weight:500;">{{ row.best_runtime }}</td>
                        <td style="padding:12px; color:var(--accent-danger); font-weight:500;">{{ row.worst_runtime }}</td>
                        <td style="padding:12px;">
                          {% for label, r in row.mean_ranks.items() %}
                            <span class="badge" style="background:rgba(66, 133, 244, 0.1); color:var(--accent-primary); border:1px solid rgba(66, 133, 244, 0.2); margin:2px 4px 2px 0; display:inline-block; padding:4px 8px; border-radius:4px;">{{ label }}: {{ "%.2f"|format(r) }}</span>
                          {% endfor %}
                        </td>
                      </tr>
                    {% endfor %}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <footer class="footer">
        <div style="display:flex; align-items:center; justify-content:space-between; flex-wrap:wrap; gap:8px;">
          <div>
            Generated by <strong>Algoscope Pro</strong> - Premium Algorithm Analysis Tool
          </div>
          <div style="display:flex; align-items:center; gap:12px; font-size:12px;">
            <span class="muted">🎯 Master algorithm complexity analysis</span>
            <span class="muted">📊 Export charts or CSV using the top-right actions</span>
          </div>
        </div>
        <div style="margin-top:12px; padding-top:12px; border-top:1px solid rgba(255,255,255,0.1); text-align:center;">
          <div style="font-size:12px; color:var(--text-muted);">
            © 2024 <a href="https://www.prakashrabidas.in/" target="_blank" style="color:var(--accent-primary); text-decoration:none; font-weight:500;">Prakash Rabidas</a> - All Rights Reserved
          </div>
          <div style="margin-top:4px; font-size:11px; color:var(--text-muted); opacity:0.8;">
            Senior Software Engineer at Thales | Experienced in Python, Java, C++, AWS
          </div>
        </div>
      </footer>
    </main>
  </div>

  <script>
    // Basic tab navigation (sidebar)
    document.querySelectorAll('.side-item').forEach(item => {
      item.addEventListener('click', () => {
        document.querySelectorAll('.side-item').forEach(i=>i.classList.remove('active'));
        item.classList.add('active');
        const tab = item.getAttribute('data-tab');
        document.querySelectorAll('main .panel').forEach(p => p.style.display = 'none');
        // show relevant panels
        if (tab === 'overview') { 
          document.getElementById('overview_panel').style.display = 'block'; 
          document.getElementById('runtime_panel').style.display='block'; 
          document.getElementById('memory_panel').style.display='block';
          document.getElementById('interview_panel').style.display='none';
          document.getElementById('comparison_panel').style.display='none';
          document.getElementById('complexity_panel').style.display='none';
          // Apply full width for chart panels
          const gridContainer = document.querySelector('.grid-2');
          if (gridContainer) {
            gridContainer.classList.add('chart-full-width');
          }
        }
        if (tab === 'runtime') { 
          document.getElementById('runtime_panel').style.display='block';
          document.getElementById('overview_panel').style.display='none';
          document.getElementById('memory_panel').style.display='none';
          document.getElementById('interview_panel').style.display='none';
          document.getElementById('comparison_panel').style.display='none';
          document.getElementById('complexity_panel').style.display='none';
          // Apply full width for chart panels
          const gridContainer = document.querySelector('.grid-2');
          if (gridContainer) {
            gridContainer.classList.add('chart-full-width');
          }
        }
        if (tab === 'memory') { 
          document.getElementById('memory_panel').style.display='block';
          document.getElementById('overview_panel').style.display='none';
          document.getElementById('runtime_panel').style.display='none';
          document.getElementById('interview_panel').style.display='none';
          document.getElementById('comparison_panel').style.display='none';
          document.getElementById('complexity_panel').style.display='none';
          // Apply full width for chart panels
          const gridContainer = document.querySelector('.grid-2');
          if (gridContainer) {
            gridContainer.classList.add('chart-full-width');
          }
        }
        if (tab === 'complexity') { 
          document.getElementById('complexity_panel').style.display='block';
          document.getElementById('overview_panel').style.display='none';
          document.getElementById('runtime_panel').style.display='none';
          document.getElementById('memory_panel').style.display='none';
          document.getElementById('interview_panel').style.display='none';
          document.getElementById('comparison_panel').style.display='none';
          // Remove full width class for full-width panels
          const gridContainer = document.querySelector('.grid-2');
          if (gridContainer) {
            gridContainer.classList.remove('chart-full-width');
          }
        }
        if (tab === 'interview') {
          document.getElementById('interview_panel').style.display='block';
          document.getElementById('overview_panel').style.display='none';
          document.getElementById('runtime_panel').style.display='none';
          document.getElementById('memory_panel').style.display='none';
          document.getElementById('comparison_panel').style.display='none';
          document.getElementById('complexity_panel').style.display='none';
          // Remove full width class for full-width panels
          const gridContainer = document.querySelector('.grid-2');
          if (gridContainer) {
            gridContainer.classList.remove('chart-full-width');
          }
        }
        if (tab === 'comparison') { 
          document.getElementById('comparison_panel').style.display='block';
          document.getElementById('overview_panel').style.display='none';
          document.getElementById('runtime_panel').style.display='none';
          document.getElementById('memory_panel').style.display='none';
          document.getElementById('interview_panel').style.display='none';
          document.getElementById('complexity_panel').style.display='none';
          // Remove full width class for full-width panels
          const gridContainer = document.querySelector('.grid-2');
          if (gridContainer) {
            gridContainer.classList.remove('chart-full-width');
          }
        }
        window.scrollTo({top:0, behavior:'smooth'});
      });
    });

    // Initialize default visibility
    document.getElementById('overview_panel').style.display = 'block';
    document.getElementById('runtime_panel').style.display = 'block';
    document.getElementById('memory_panel').style.display = 'block';
    // Apply full width for chart panels by default
    const gridContainer = document.querySelector('.grid-2');
    if (gridContainer) {
      gridContainer.classList.add('chart-full-width');
    }

    // Internal tab navigation for complexity and comparison panels
    document.querySelectorAll('.tab-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        const tabId = btn.getAttribute('data-tab');
        const container = btn.closest('.tab-container');
        
        // Remove active class from all tabs in this container
        container.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('active'));
        container.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
        
        // Add active class to clicked tab and corresponding content
        btn.classList.add('active');
        const content = container.querySelector(`#${tabId}`);
        if (content) {
          content.classList.add('active');
        }
      });
    });

    // Premium Theme toggle (light/dark)
    const toggleTheme = document.getElementById('toggleTheme');
    let dark = true;
    toggleTheme.addEventListener('click', () => {
      dark = !dark;
      if (!dark) {
        // Light theme
        document.documentElement.style.setProperty('--bg-primary','#ffffff');
        document.documentElement.style.setProperty('--bg-secondary','#f8fafc');
        document.documentElement.style.setProperty('--bg-tertiary','#f1f5f9');
        document.documentElement.style.setProperty('--bg-card','#ffffff');
        document.documentElement.style.setProperty('--text-primary','#0f172a');
        document.documentElement.style.setProperty('--text-secondary','#334155');
        document.documentElement.style.setProperty('--text-muted','#64748b');
        document.documentElement.style.setProperty('--bg-glass','rgba(0,0,0,0.05)');
        document.documentElement.style.setProperty('--bg-glass-hover','rgba(0,0,0,0.08)');
        document.body.style.background = 'linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%)';
      } else {
        // Dark theme (default)
        document.documentElement.style.setProperty('--bg-primary','#0a0e1a');
        document.documentElement.style.setProperty('--bg-secondary','#111827');
        document.documentElement.style.setProperty('--bg-tertiary','#1f2937');
        document.documentElement.style.setProperty('--bg-card','#1e293b');
        document.documentElement.style.setProperty('--text-primary','#f8fafc');
        document.documentElement.style.setProperty('--text-secondary','#cbd5e1');
        document.documentElement.style.setProperty('--text-muted','#94a3b8');
        document.documentElement.style.setProperty('--bg-glass','rgba(255,255,255,0.05)');
        document.documentElement.style.setProperty('--bg-glass-hover','rgba(255,255,255,0.08)');
        document.body.style.background = 'radial-gradient(circle at 20% 80%, rgba(59, 130, 246, 0.1) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(139, 92, 246, 0.1) 0%, transparent 50%), linear-gradient(135deg, #0a0e1a 0%, #111827 100%)';
      }
    });

    // Provide helpers to convert table JSON to CSV for download
    function jsonToCsv(obj) {
      try {
        const arr = obj;
        if (!arr || arr.length === 0) return '';
        // flatten first-level nested stats
        const keys = ['n'].concat(Object.keys(arr[0]).filter(k=>k!=='n'));
        let out = '';
        // build header
        const header = ['n'];
        const funcs = Object.keys(arr[0]).filter(k=>k!=='n');
        funcs.forEach(fn => {
          header.push(fn + ' (mean)');
          header.push(fn + ' (lower)');
          header.push(fn + ' (upper)');
        });
        out += header.join(',') + '\\n';
        arr.forEach(row => {
          const rowVals = [row.n];
          funcs.forEach(fn => {
            const v = row[fn] || {mean:'', lower:'', upper:''};
            rowVals.push(v.mean || '');
            rowVals.push(v.lower || '');
            rowVals.push(v.upper || '');
          });
          out += rowVals.join(',') + '\\n';
        });
        return out;
      } catch(e){ return ''; }
    }

    document.getElementById('downloadBtn').addEventListener('click', () => {
      // prefer runtime table CSV
      const rt = JSON.parse('{{ runtime_table_json | replace("'", "\\'") | replace("\\n","\\n") }}');
      const csv = jsonToCsv(rt);
      const blob = new Blob([csv], {type: 'text/csv'});
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url; a.download = '{{ title | replace(" ","_") }}_runtime.csv'; a.click();
      URL.revokeObjectURL(url);
    });

    // Toggle y-scale for runtime & memory charts by updating Plotly layout
    function toggleYScale(plotDivSelector, currentStateBtn) {
      const node = document.querySelector(plotDivSelector + ' .js-plotly-plot') || document.querySelector(plotDivSelector + ' .plotly');
      if (!node || !node.id) return;
      const plotId = node.id;
      const fullLayout = document.getElementById(plotId).layout || {};
      const current = fullLayout.yaxis && fullLayout.yaxis.type === 'log';
      const newType = current ? 'linear' : 'log';
      Plotly.relayout(plotId, {'yaxis.type': newType, 'transition': {duration: 600, easing: 'cubic-in-out'}});
      currentStateBtn.textContent = 'Y-scale: ' + (newType);
    }

    document.getElementById('runtimeToggleScale').addEventListener('click', function(){ toggleYScale('#runtime_chart', this); });
    document.getElementById('memoryToggleScale').addEventListener('click', function(){ toggleYScale('#memory_chart', this); });
    document.getElementById('toggleScale').addEventListener('click', function(){ toggleYScale('#overview_chart', this); });

    // Reset view helper: try to reset axes (simple approach: call relayout to autoscale)
    document.getElementById('resetView').addEventListener('click', () => {
      document.querySelectorAll('.js-plotly-plot').forEach(p => {
        if (p && p.id) Plotly.relayout(p.id, {'xaxis.autorange': true, 'yaxis.autorange': true});
      });
    });

    // Enhanced loading animations and interactions
    window.addEventListener('load', () => { 
      document.querySelector('main').setAttribute('tabindex','0');
      
      // Add pulse animation to logo on load
      const logo = document.querySelector('.logo');
      if (logo) {
        logo.classList.add('pulse');
        setTimeout(() => logo.classList.remove('pulse'), 3000);
      }
      
      // Staggered animation for cards
      const cards = document.querySelectorAll('.card');
      cards.forEach((card, index) => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';
        setTimeout(() => {
          card.style.transition = 'all 0.6s cubic-bezier(0.4, 0.0, 0.2, 1)';
          card.style.opacity = '1';
          card.style.transform = 'translateY(0)';
        }, index * 100);
      });
      
      // Animate sidebar items
      const sideItems = document.querySelectorAll('.side-item');
      sideItems.forEach((item, index) => {
        item.style.opacity = '0';
        item.style.transform = 'translateX(-20px)';
        setTimeout(() => {
          item.style.transition = 'all 0.4s cubic-bezier(0.4, 0.0, 0.2, 1)';
          item.style.opacity = '1';
          item.style.transform = 'translateX(0)';
        }, 200 + index * 50);
      });
    });
    
    // Enhanced hover effects for interactive elements
    document.addEventListener('DOMContentLoaded', () => {
      // Add ripple effect to buttons
      const buttons = document.querySelectorAll('.btn');
      buttons.forEach(button => {
        button.addEventListener('click', function(e) {
          const ripple = document.createElement('span');
          const rect = this.getBoundingClientRect();
          const size = Math.max(rect.width, rect.height);
          const x = e.clientX - rect.left - size / 2;
          const y = e.clientY - rect.top - size / 2;
          
          ripple.style.cssText = `
            position: absolute;
            width: ${size}px;
            height: ${size}px;
            left: ${x}px;
            top: ${y}px;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            transform: scale(0);
            animation: ripple 0.6s ease-out;
            pointer-events: none;
          `;
          
          this.appendChild(ripple);
          setTimeout(() => ripple.remove(), 600);
        });
      });
      
      // Add CSS for ripple animation
      const style = document.createElement('style');
      style.textContent = `
        @keyframes ripple {
          to {
            transform: scale(2);
            opacity: 0;
          }
        }
      `;
      document.head.appendChild(style);
    });

  </script>
</body>
</html>
